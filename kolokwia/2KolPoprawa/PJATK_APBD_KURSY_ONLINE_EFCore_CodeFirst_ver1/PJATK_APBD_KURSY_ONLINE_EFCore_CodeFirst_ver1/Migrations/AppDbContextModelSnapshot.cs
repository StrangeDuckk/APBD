// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PJATK_APBD_KURSY_ONLINE_EFCore_CodeFirst_ver1.Data;

#nullable disable

namespace PJATK_APBD_KURSY_ONLINE_EFCore_CodeFirst_ver1.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PJATK_APBD_KURSY_ONLINE_EFCore_CodeFirst_ver1.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CourseId");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("PJATK_APBD_KURSY_ONLINE_EFCore_CodeFirst_ver1.Models.Enrollment", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("Student_ID");

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("Course_ID");

                    b.Property<string>("CompletionStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("Enrollment");
                });

            modelBuilder.Entity("PJATK_APBD_KURSY_ONLINE_EFCore_CodeFirst_ver1.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("StudentId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("PJATK_APBD_KURSY_ONLINE_EFCore_CodeFirst_ver1.Models.StudentCourse", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("Student_ID");

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("Course_ID");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("StudentCourse");
                });

            modelBuilder.Entity("PJATK_APBD_KURSY_ONLINE_EFCore_CodeFirst_ver1.Models.Enrollment", b =>
                {
                    b.HasOne("PJATK_APBD_KURSY_ONLINE_EFCore_CodeFirst_ver1.Models.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PJATK_APBD_KURSY_ONLINE_EFCore_CodeFirst_ver1.Models.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("PJATK_APBD_KURSY_ONLINE_EFCore_CodeFirst_ver1.Models.StudentCourse", b =>
                {
                    b.HasOne("PJATK_APBD_KURSY_ONLINE_EFCore_CodeFirst_ver1.Models.Course", "Course")
                        .WithMany("StudentCourse")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PJATK_APBD_KURSY_ONLINE_EFCore_CodeFirst_ver1.Models.Student", "Student")
                        .WithMany("StudentCourse")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("PJATK_APBD_KURSY_ONLINE_EFCore_CodeFirst_ver1.Models.Course", b =>
                {
                    b.Navigation("Enrollments");

                    b.Navigation("StudentCourse");
                });

            modelBuilder.Entity("PJATK_APBD_KURSY_ONLINE_EFCore_CodeFirst_ver1.Models.Student", b =>
                {
                    b.Navigation("Enrollments");

                    b.Navigation("StudentCourse");
                });
#pragma warning restore 612, 618
        }
    }
}
